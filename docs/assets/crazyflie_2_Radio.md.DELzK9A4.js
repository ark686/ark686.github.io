import{_ as e,c as i,o as s,a2 as t}from"./chunks/framework.DENTaYdp.js";const h=JSON.parse('{"title":"Crazyflie Radio","description":"","frontmatter":{},"headers":[],"relativePath":"crazyflie/2_Radio.md","filePath":"crazyflie/2_Radio.md"}'),o={name:"crazyflie/2_Radio.md"};function n(r,a,l,d,p,u){return s(),i("div",null,[...a[0]||(a[0]=[t(`<h1 id="crazyflie-radio" tabindex="-1">Crazyflie Radio <a class="header-anchor" href="#crazyflie-radio" aria-label="Permalink to &quot;Crazyflie Radio&quot;">​</a></h1><h2 id="_1-flashing" tabindex="-1">1. Flashing <a class="header-anchor" href="#_1-flashing" aria-label="Permalink to &quot;1. Flashing&quot;">​</a></h2><p>URL: <a href="https://www.bitcraze.io/documentation/repository/crazyradio2-firmware/main/building-and-flashing/flash/" target="_blank" rel="noreferrer">https://www.bitcraze.io/documentation/repository/crazyradio2-firmware/main/building-and-flashing/flash/</a></p><p>The Crazyradio 2.0 is flashed via USB. When the radio is in bootloader mode (first installation) it will appear as a USB-drive, flashing is simply done by dragging-and-dropping a new firmware file to the drive.</p><p>To flash new firmware to the Crazyradio, just drag-and-drop the new firmware (a .UF2 file) to the Crazyradio2 drive. The new file will be written to the flash memory, and the Crazyradio 2.0 will restart, running the new firmware. Writing the firmware takes a second or two and when the Crazyradio 2.0 restarts, the LED will no longer be red and the USB-drive will disappear.</p><p><a href="https://ece2.arkcom.ca/docs/crazyradio2-CRPA-emulation-1.1.uf2" target="_blank" rel="noreferrer">https://ece2.arkcom.ca/docs/crazyradio2-CRPA-emulation-1.1.uf2</a></p><h2 id="_2-usb-permissions" tabindex="-1">2. USB Permissions <a class="header-anchor" href="#_2-usb-permissions" aria-label="Permalink to &quot;2. USB Permissions&quot;">​</a></h2><p>URL: <a href="https://www.bitcraze.io/documentation/repository/crazyflie-lib-python/master/installation/usb_permissions" target="_blank" rel="noreferrer">https://www.bitcraze.io/documentation/repository/crazyflie-lib-python/master/installation/usb_permissions</a></p><p>To use Crazyflie Radio on USB:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo groupadd plugdev  </span></span>
<span class="line"><span>sudo usermod -a -G plugdev $USER</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cat &lt;&lt;EOF | sudo tee /etc/udev/rules.d/99-bitcraze.rules &gt; /dev/null</span></span>
<span class="line"><span># Crazyradio (normal operation)</span></span>
<span class="line"><span>SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;1915&quot;, ATTRS{idProduct}==&quot;7777&quot;, MODE=&quot;0664&quot;, GROUP=&quot;plugdev&quot;</span></span>
<span class="line"><span># Bootloader</span></span>
<span class="line"><span>SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;1915&quot;, ATTRS{idProduct}==&quot;0101&quot;, MODE=&quot;0664&quot;, GROUP=&quot;plugdev&quot;</span></span>
<span class="line"><span># Crazyflie (over USB)</span></span>
<span class="line"><span>SUBSYSTEM==&quot;usb&quot;, ATTRS{idVendor}==&quot;0483&quot;, ATTRS{idProduct}==&quot;5740&quot;, MODE=&quot;0664&quot;, GROUP=&quot;plugdev&quot;</span></span>
<span class="line"><span>EOF</span></span></code></pre></div>`,11)])])}const f=e(o,[["render",n]]);export{h as __pageData,f as default};
